<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>cms</category>
        <client_script/>
        <description>01/06/2025 : enchanced UX/UI, add function to summary to record field&#13;
31/05/2025 : add function for auto summary records (autoSumRecord) when open chat_ui in record workspace&#13;
30/05/2025 : add function to select AI model&#13;
28/05/2025 : update to use mfec_gpt (https://mfec-ai-agent-29849930840.asia-southeast1.run.app/agent_mfecgpt)</description>
        <direct>false</direct>
        <endpoint/>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide">
    <html>

    <head>
        <style>
            html,
            body {
                height: 100%;
                margin: 0;
                padding: 0;
                font-family: 'Segoe UI', 'Prompt', Arial, sans-serif;
                background: #f3f6fb;
            }

            .chat-container {
                display: flex;
                flex-direction: column;
                height: 100%;
                /* min-height: 480px;
                max-width: 420px; */
                margin: auto;
                padding: 10px 12px 10px 12px;
                background: #fff;
                border-radius: 10px;
                box-shadow: 0 4px 24px rgba(50, 60, 90, 0.10), 0 1.5px 6px #eee;
            }

            #chatbox::-webkit-scrollbar {
                display: none;
            }

            #chatbox {
                flex: 1;
                min-height: 0;
                background-color: #f5f7fa;
                border: 1px solid #e2e6ea;
                border-radius: 12px;
                padding: 14px 14px;
                overflow-y: auto;
                box-shadow: inset 0 1.5px 4px rgba(0, 0, 0, 0.03);
                margin-bottom: 5px;
                font-size: 14px;
                line-height: 1.1;
                transition: box-shadow 0.2s;
                scrollbar-width: none;
                /* Firefox */
                -ms-overflow-style: none;
                /* IE 10+ */
            }

            .header {
                justify-content: center;
                margin-top: 0;
                font-size: 1.25rem;
                color: #4B5768;
                border-bottom: 1.2px solid #e0e0e0;
                padding-bottom: 10px;
                padding-left: 6px;
                letter-spacing: 0.02em;
            }

            .msg {
                margin: 6px 0;
                display: flex;
                clear: both;
            }

            .user-msg {
                justify-content: flex-end;
            }

            .bot-msg {
                justify-content: flex-start;
            }

            .bubble {
                max-width: 80%;
                min-width: 60px;
                padding: 10px 14px;
                border-radius: 16px;
                margin-bottom: 2px;
                font-size: 14px;
                box-shadow: 0px 1.5px 6px rgba(120, 140, 160, 0.08);
                /* word-break: break-word;
                white-space: pre-line; */
                overflow-wrap: break-word;
            }

            .bubble p,
            .bubble li {
                margin-top: 0;
                margin-bottom: 0;
            }

            .user-bubble {
                background: linear-gradient(110deg, #33d2ff 0%, #478eff 70%);
                color: #fff;
                align-self: flex-end;
                border-bottom-right-radius: 4px;
            }

            .bot-bubble {
                background: linear-gradient(110deg, #e5e8ed 0%, #f1f3f6 100%);
                color: #324155;
                border-bottom-left-radius: 4px;
                align-self: flex-start;
            }

            .bubble a,
            .bot-bubble a {
                color: #165bd9;
                text-decoration: underline;
                word-break: break-all;
            }

            .bubble a:hover {
                text-decoration: none;
            }

            #msgInput,
            button {
                height: 40px;
                /* ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏≠‡∏ö */
                box-sizing: border-box;
            }

            #msgInput {
                padding: 0 12px;
                /* padding ‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô */
            }

            button {
                padding: 0px 16px;
                background: linear-gradient(90deg, #52d57a 0%, #33b77a 90%);
                color: #fff;
                border: none;
                border-radius: 6px;
                font-size: 14px;
                cursor: pointer;
                transition: background-color 0.2s ease;
            }

            button:hover,
            button:focus {
                background: linear-gradient(90deg, #34bcfa 0%, #478eff 90%);
            }

            button#clearMsg {
                background: linear-gradient(90deg, #e95454 0%, #ce1e1e 100%);
                color: #fff;
            }

            button#clearMsg:hover {
                background: linear-gradient(90deg, #c43232 0%, #a51515 100%);
            }

            select#modelSelect {
                padding: 6px 12px;
                border: 1px solid #ccc;
                border-radius: 8px;
                font-size: 14px;
                background-color: #f9f9f9;
                box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
                appearance: none;
                height: 32px;
                background-repeat: no-repeat;
                background-position: right 8px center;
                background-size: 12px;
                padding-right: 30px;
                /* space for arrow */
                transition: all 0.2s ease-in-out;
                cursor: pointer;
            }

            select#modelSelect:hover {
                background-color: #fff;
                border-color: #888;
            }

            #modelSelect:focus {
                outline: none;
                border-color: #478eff;
                box-shadow: 0 0 0 2px rgba(71, 142, 255, 0.2);
            }

            @media (max-width: 480px) {
                #msgInput {
                    width: 100%;
                    margin-bottom: 8px;
                }

                button {
                    width: 100%;
                }
            }

            #bubble-command {
                display: flex;
                overflow-x: auto;
                /* ‚úÖ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ scroll ‡∏ã‡πâ‡∏≤‡∏¢‡∏Ç‡∏ß‡∏≤‡πÑ‡∏î‡πâ */
                gap: 12px;
                padding: 8px 12px;
                margin-top: 12px;
                background: transparent;
                border: none;
                scrollbar-width: none;
                /* ‡∏ã‡πà‡∏≠‡∏ô scrollbar ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Firefox */
            }

            /* ‚úÖ ‡∏ã‡πà‡∏≠‡∏ô scrollbar ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Chrome, Safari */
            #bubble-command::-webkit-scrollbar {
                display: none;
            }

            #bubble-command .green-bubble {
                background: linear-gradient(110deg, #e7fce5 0%, #b5f7c8 100%);
                color: #225c33;
                border: 1px solid #a6efb9;
                border-radius: 999px;
                padding: 10px 16px;
                font-size: 14px;
                white-space: nowrap;
                transition: background 0.2s ease, transform 0.2s ease;
                cursor: pointer;
                flex-shrink: 0;
                /* ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏±‡πä‡∏ö‡πÄ‡∏ö‡∏¥‡πâ‡∏•‡∏¢‡πà‡∏≠ */
                box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
            }

            #bubble-command .green-bubble:hover {
                background: linear-gradient(110deg, #d4fbd8 0%, #9df5b4 100%);
                transform: scale(1.03);
            }

            /* loading css */
            .typing-indicator {
                display: inline-flex;
                align-items: center;
                gap: 4px;
                padding: 8px 12px;
                border-radius: 12px;
                background-color: #f1f1f1;
                color: #333;
                font-size: 14px;
            }

            .typing-dot {
                width: 6px;
                height: 6px;
                background-color: #888;
                border-radius: 50%;
                animation: blink 1.4s infinite both;
            }

            .typing-dot:nth-child(2) {
                animation-delay: 0.2s;
            }

            .typing-dot:nth-child(3) {
                animation-delay: 0.4s;
            }

            @keyframes blink {
                0% {
                    opacity: 0.2;
                    transform: translateY(0);
                }

                20% {
                    opacity: 1;
                    transform: translateY(-2px);
                }

                100% {
                    opacity: 0.2;
                    transform: translateY(0);
                }
            }

            #sn-chat-icon {
                display: none !important;
            }
        </style>
    </head>
    <div id="sn-chat-icon">
    </div>

    <body onload="loadChatHistory()">
        <div class="chat-container">
            <div class="header" style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px; gap: 4px;">
                <h3 style="margin: 0; font-weight: bold; font-size: 1.75rem;">]]>üí¨<![CDATA[ MFEC AI Agent</h3>
                <select id="modelSelect" title="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å AI Model">
                    <option value="mfecgpt">MFEC GPT(4.1)</option>
                    <!-- <option value="tlskai">TalentSeeker.AI</option>
                    <option value="itspai">ITSupport.AI</option> -->
                    <option value="nhsoai">NSHO.AI</option>
                </select>
            </div>
            <div id="chatbox">
                <div class="msg bot-msg">
                    <div class="bubble bot-bubble">‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏ä‡∏ó‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà...</div>
                </div>
            </div>

            <div style="display: flex; gap: 8px; align-items: stretch; margin-top: 10px;">
                <input type="text" id="msgInput" placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°..." style="flex: 6; font-size: 14px; border: 1px solid #ccc; border-radius: 4px;" />
                <button onclick="sendMsg()" style="color:white;flex: 2; font-size: 14px; border-radius: 4px;">‡∏™‡πà‡∏á</button>
                <button id="clearMsg" onclick="clearHistory()" style="flex: 2; font-size: 14px; border-radius: 4px;">‡∏•‡πâ‡∏≤‡∏á</button>
            </div>
        </div>

    </body>
    <script>
        var userId = "${gs.getUserID()}";
        var sessionId = "${gs.getSession().getSessionID()}";

        document.getElementById('msgInput').addEventListener('keydown', function(event) {
            if (event.key === 'Enter') {
                event.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà
                sendMsg(); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
            }
        });

        function loadChatHistory() {
            var ga = new GlideAjax('MF_AIUtils');
            ga.addParam('sysparm_name', 'getHistory');
            ga.addParam('sysparm_session', sessionId);
            ga.getXML(function(response) {
                var answer = response.responseXML.documentElement.getAttribute('answer');
                var messages = JSON.parse(answer);
                messages.forEach(function(m) {
                    appendMessage(m.msg, m.type);
                });
                if (chkRecordURL()) {
                    showBubbleCommand();
                }
            });
        }

        function sendMsg() {
            var msg = document.getElementById('msgInput').value.trim();
            if (!msg) return;
            appendMessage(msg, 'user');
            saveMessage(msg, 'user');
            document.getElementById('msgInput').value = "";
            showTyping(); // ‡πÅ‡∏™‡∏î‡∏á typing dots
            getBotReply(msg, function(botReply) {
                removeTyping(); // ‡∏ã‡πà‡∏≠‡∏ô typing dots
                appendMessage(botReply, 'bot');
                saveMessage(botReply, 'bot');
            });
        }

        function appendMessage(text, type) {
            var chat = document.getElementById('chatbox');
            var msgDiv = document.createElement('div');
            msgDiv.className = 'msg ' + (type === 'user' ? 'user-msg' : 'bot-msg');

            if (type === 'bot') {
                msgDiv.innerHTML = '<div style="font-size: 12px; color: #888; margin-left: 4px; margin-bottom: 2px;">]]>ü§ñ<![CDATA[</div><div class="bubble bot-bubble">' + text + '</div>';
            } else {
                msgDiv.innerHTML = '<div style="font-size: 12px; color: #888; margin-left: 4px; margin-bottom: 2px;">]]>üë®üèª<![CDATA[</div><div class="bubble user-bubble">' + text + '</div>';
            }

            chat.appendChild(msgDiv);
            chat.scrollTop = chat.scrollHeight;
        }

        function saveMessage(text, type) {
            var ga = new GlideAjax('MF_AIUtils');
            ga.addParam('sysparm_name', 'saveMessage');
            ga.addParam('sysparm_msg', text);
            ga.addParam('sysparm_type', type);
            ga.addParam('sysparm_session', sessionId);
            ga.addParam('sysparm_user', userId);
            ga.getXML();
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà: ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ + callback ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å GlideAjax
        function getBotReply(msg, callback) {
            var model = modelSelect.value.toString();
            var ga = new GlideAjax('MF_AIUtils');
            ga.addParam('sysparm_name', 'getAIanswer');
            ga.addParam('sysparm_ques', msg);
            ga.addParam('sysparm_aimodel', model); // ‡πÄ‡∏û‡∏¥‡πà‡∏° model ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            ga.getXML(function(response) {
                var answer = response.responseXML.documentElement.getAttribute("answer");
                callback(answer);
            });
        }

        function clearHistory() {
            var chat = document.getElementById('chatbox');
            chat.innerHTML = '';

            var ga = new GlideAjax('MF_AIUtils');
            ga.addParam('sysparm_name', 'clearHistory');
            ga.addParam('sysparm_session', sessionId);
            ga.getXML();
        }

        function showTyping() {
            var chat = document.getElementById('chatbox');
            var typingDiv = document.createElement('div');
            typingDiv.className = 'msg bot-msg';
            typingDiv.id = 'typing-indicator';
            typingDiv.innerHTML = `
				<div class="typing-indicator">
					<div class="typing-dot"></div>
					<div class="typing-dot"></div>
					<div class="typing-dot"></div>
				</div>
			`;
            chat.appendChild(typingDiv);
            chat.scrollTop = chat.scrollHeight;
        }

        function removeTyping() {
            var typingDiv = document.getElementById('typing-indicator');
            if (typingDiv) {
                typingDiv.remove();
            }
        }

        function scrollChatboxToBottom() {
            var chatbox = document.getElementById('chatbox');
            if (chatbox) {
                chatbox.scrollTop = chatbox.scrollHeight;
            }
        }

        function chkRecordURL() {
            var parentUrl = window.top.location.pathname;
            var match = parentUrl.match(/\/record\/([^\/]+)\/([^\/]+)/);
            if (match) {
                return true;
            } else {
                return false;
            }
        }

        function showBubbleCommand() {
            if (document.getElementById('bubble-command')) return;

            const chat = document.getElementById('chatbox');
            const wrapper = document.createElement('div');
            wrapper.id = 'bubble-command';

            const createBubble = (text, onClickHandler) => {
                const bubble = document.createElement('div');
                bubble.className = 'green-bubble';
                bubble.innerText = text;
                bubble.onclick = () => {
                    onClickHandler();
                    // wrapper.remove();
                };
                return bubble;
            };

            var bubble1 = createBubble(']]>üìã<![CDATA[ ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å record ‡∏ô‡∏µ‡πâ', () => autoSumRecordInChat());
            var bubble2 = createBubble(']]>üìù<![CDATA[ ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÉ‡∏ô record ‡∏ô‡∏µ‡πâ', () => autoSumRecordInForm());

            wrapper.appendChild(bubble1);
            wrapper.appendChild(bubble2);
            chat.appendChild(wrapper);
            scrollChatboxToBottom();
        }

        function autoSumRecordInChat() {
            showTyping();
            var match = window.top.location.pathname.match(/\/record\/([^\/]+)\/([^\/]+)/);
            var table = match[1];
            var sysId = match[2];
            var ga = new GlideAjax('MF_AIUtils');
            ga.addParam('sysparm_name', 'getAIautoSumRecord');
            ga.addParam('sysparm_table', table);
            ga.addParam('sysparm_id', sysId);
            ga.getXML(function(response) {
                var answer = response.responseXML.documentElement.getAttribute("answer");
                removeTyping();
                appendMessage(answer, 'bot');
                saveMessage(answer, 'bot');
            });
        }

		function autoSumRecordInForm() {
            showTyping();
            var match = window.top.location.pathname.match(/\/record\/([^\/]+)\/([^\/]+)/);
            var table = match[1];
            var sysId = match[2];
            var ga = new GlideAjax('MF_AIUtils');
            ga.addParam('sysparm_name', 'getAIautoSumRecordInForm');
            ga.addParam('sysparm_table', table);
            ga.addParam('sysparm_id', sysId);
            ga.getXML(function(response) {
                var answer = response.responseXML.documentElement.getAttribute("answer");
                removeTyping();
				if (answer == 'Completed') {
                	appendMessage('‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ AI summary ‡∏Ç‡∏≠‡∏á‡πÉ‡∏ö‡∏á‡∏≤‡∏ô', 'bot');
				} else {
					appendMessage('‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ ‡πÇ‡∏õ‡∏£‡∏î‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á', 'bot');
				}
            });
        }
    </script>

    </html>
</j:jelly>]]></html>
        <name>chat_ui</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin.gust</sys_created_by>
        <sys_created_on>2025-05-22 15:16:05</sys_created_on>
        <sys_id>e02c216393e56a507ff935277bba100b</sys_id>
        <sys_mod_count>175</sys_mod_count>
        <sys_name>chat_ui</sys_name>
        <sys_package display_value="MFEC AI Utils GB" source="7efc99ef93e16a507ff935277bba10ee">7efc99ef93e16a507ff935277bba10ee</sys_package>
        <sys_policy/>
        <sys_scope display_value="MFEC AI Utils GB">7efc99ef93e16a507ff935277bba10ee</sys_scope>
        <sys_update_name>sys_ui_page_e02c216393e56a507ff935277bba100b</sys_update_name>
        <sys_updated_by>admin.gust</sys_updated_by>
        <sys_updated_on>2025-06-01 08:25:58</sys_updated_on>
    </sys_ui_page>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>e02c216393e56a507ff935277bba100b</id>
        <sys_created_by>admin.gust</sys_created_by>
        <sys_created_on>2025-05-22 15:16:04</sys_created_on>
        <sys_id>174c696393e56a507ff935277bba109a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin.gust</sys_updated_by>
        <sys_updated_on>2025-05-22 15:16:04</sys_updated_on>
        <table>sys_ui_page</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
